name: Deploy to AWS

on:
  push:
    branches:
      - main
      - dev

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2

      - name: Cache CDK dependencies
        id: CDK-cache
        uses: actions/cache@v2
        with:
          path: ./infra/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('./infra/yarn.lock') }}

      - name: Cache Web dependencies
        id: Web-cache
        uses: actions/cache@v2
        with:
          path: ./web/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('./web/yarn.lock') }}

      - name: Install CDK dependencies
        working-directory: ./infra
        run: yarn
        if: steps.CDK-cache.outputs.cache-hit != 'true'

      - name: Install Web dependencies
        working-directory: ./web
        run: yarn
        if: steps.Web-cache.outputs.cache-hit != 'true'

      - name: Build Web for Development
        if: github.ref == 'refs/heads/dev'
        working-directory: ./web
        run: yarn build:dev

      - name: Build Web for Production
        if: github.ref == 'refs/heads/main'
        working-directory: ./web
        run: yarn build:prod

      - name: Synth for Development
        if: github.ref == 'refs/heads/dev'
        working-directory: ${{ github.workspace }}/infra
        run: yarn cdk synth
        env:
          ENVIRONMENT: dev
          CHATME_DOMAIN_CERTIFICATE_ARN: ${{ secrets.CHATME_DOMAIN_CERTIFICATE_ARN }}

      - name: Synth for Production
        if: github.ref == 'refs/heads/main'
        working-directory: ${{ github.workspace }}/infra
        run: yarn cdk synth
        env:
          ENVIRONMENT: prod
          CHATME_DOMAIN_CERTIFICATE_ARN: ${{ secrets.CHATME_DOMAIN_CERTIFICATE_ARN }}

  Deploy:
    runs-on: ubuntu-latest

    needs: Build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Restore CDK dependencies cache
        uses: actions/cache@v2
        with:
          path: ./infra/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('./infra/yarn.lock') }}

      - name: Restore Web dependencies cache
        uses: actions/cache@v2
        with:
          path: ./web/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('./web/yarn.lock') }}

      - name: Deploy for Development
        if: github.ref == 'refs/heads/dev'
        working-directory: ${{ github.workspace }}/infra
        run: yarn deploy
        env:
          ENVIRONMENT: dev
          CHATME_DOMAIN_CERTIFICATE_ARN: ${{ secrets.CHATME_DOMAIN_CERTIFICATE_ARN }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

          VITE_USERPOOL_ID: ${{ secrets.DEV_VITE_USERPOOL_ID }}
          VITE_USERPOOL_CLIENT_ID: ${{ secrets.DEV_VITE_USERPOOL_CLIENT_ID }}
          VITE_API_URL: "https://chatme-api-dev.guilhermedev.com"
          VITE_WEBSOCKET_API_URL: "wss://chatme-wsapi-dev.guilhermedev.com"

      - name: Deploy for Production
        if: github.ref == 'refs/heads/main'
        working-directory: ${{ github.workspace }}/infra
        run: yarn deploy -p
        env:
          ENVIRONMENT: prod
          CHATME_DOMAIN_CERTIFICATE_ARN: ${{ secrets.CHATME_DOMAIN_CERTIFICATE_ARN }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

          VITE_USERPOOL_ID: ${{ secrets.PROD_VITE_USERPOOL_ID }}
          VITE_USERPOOL_CLIENT_ID: ${{ secrets.PROD_VITE_USERPOOL_CLIENT_ID }}
          VITE_API_URL: "https://chatme-api.guilhermedev.com"
          VITE_WEBSOCKET_API_URL: "wss://chatme-wsapi.guilhermedev.com"
